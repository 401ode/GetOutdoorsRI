<?php
/**
 * @file
 * Code for the News feature.
 */

include_once 'mogov_news.features.inc';
module_load_include('inc', 'mogov_news', 'includes/routing');
module_load_include('inc', 'mogov_news', 'includes/variables');
module_load_include('inc', 'mogov_news', 'includes/form_alterations');

$module_path = drupal_get_path('module', 'mogov_news');
$css_path = $module_path . '/css/mogov_news.css';
drupal_add_css($css_path, array('type' => 'file', 'every_page' => TRUE));

/**
 * Implements hook_ctools_plugin_directory().
 */
function mogov_news_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools' and $plugin_type == 'content_types') {
    return 'plugins/' . $plugin_type;
  }
}


function mogov_news_node_view($node, $view_mode, $langcode) {
  
  switch ($node->type) {

    case 'mogov_news_release':
      if (!empty($node->content['field_mogov_news_dateline']['#items'][0]['target_id'])) {
        $prefix = '<span class="place-name">';
        $suffix = '</span>';
        $tid = $node->content['field_mogov_news_dateline']['#items'][0]['target_id'];
        $term = taxonomy_term_load($tid);
        if (empty($node->content['field_mogov_news_dateline']['#items'][0]['entity'])) {
          $node->content['field_mogov_news_dateline']['#items'][0]['entity'] = $term;
        }
        $vocabulary = taxonomy_vocabulary_load($node->content['field_mogov_news_dateline']['#items'][0]['entity']->vid);
        $dateline_str = $node->content['field_mogov_news_dateline'][0]['#markup'];
        if ($vocabulary->machine_name == 'mogov_counties') {
          $dateline_str = str_replace(' (county)', '', $dateline_str);
          $primary = '<span class="pri">' . $dateline_str . ' County</span>';
          $secondary = ', <span class="sec">Mo.</span>';
          $node->content['field_mogov_news_dateline'][0]['#markup'] = $prefix . $primary . $secondary . $suffix;
        } elseif ($vocabulary->machine_name == 'mogov_municipalities') {
          $dateline_str = str_replace(' (city)', '', $dateline_str);
          $primary = '<span class="pri">' . $dateline_str . '</span>';
          $secondary = ', <span class="sec">Mo.</span>';
          $node->content['field_mogov_news_dateline'][0]['#markup'] = $prefix . $primary . $secondary . $suffix;
        } elseif ($vocabulary->machine_name == 'mogov_out_of_state_locations') {
          $pri_field = field_get_items('taxonomy_term', $term, 'field_mogov_location_lists_pri');
          $sec_field = field_get_items('taxonomy_term', $term, 'field_mogov_location_lists_sec');
          if (!empty($pri_field[0]['value']) and !empty($pri_field[0]['value'])) {
            $primary = '<span class="pri">' . $pri_field[0]['value'] . '</span>';
            $secondary = '<span class="sec">' . $sec_field[0]['value'] . '</span>';
            $node->content['field_mogov_news_dateline'][0]['#markup'] = $prefix . $primary . ', ' . $secondary . $suffix;
          } else {
            $content = $node->content['field_mogov_news_dateline'][0]['#markup'];
            $node->content['field_mogov_news_dateline'][0]['#markup'] = $prefix . $content . $suffix;
          }
        }
      }
      $node->content['field_mogov_news_contact']['#title'] = t('For more information, contact');
      break;

    case 'mogov_news_release_link':
      if ($view_mode == 'full') {
        $field = field_get_items('node', $node, 'field_mogov_news_remote_url');
        if (!empty($field[0]['url'])) {
          drupal_goto($field[0]['url'], array(), '301');
        } else {
          drupal_not_found();
        }
      }
      break;

    default:
      break;
  }
}

/**
 * Implements hook_block_info().
 */
function mogov_news_block_info() {
  $blocks = array();
  $count = variable_get_value('mogov_news_topic_block_count');
  if ($count) {
    $blocks['related_news']['info'] = t('Related News');
  }
  $count = variable_get_value('mogov_news_recent_block_count');
  if ($count) {
    $blocks['recent_news']['info'] = t('Recent News');
  }
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function mogov_news_block_view($delta='') {
  $block = array();
  switch($delta) {
    case 'recent_news':
      $count = variable_get_value('mogov_news_recent_block_count');
      if ($count) {
        $block['subject'] = t('Recent News');
        $block['content'] = mogov_news_get_recent_news_content($count);
      }
      break;
    case 'related_news':
      $count = variable_get_value('mogov_news_topic_block_count');
      if ($count) {
        $block['subject'] = t('Related News');
        $block['content'] = mogov_news_get_related_news_content($count);
      }
      break;
  }
  return $block;
}

function mogov_news_get_recent_news_content($count, $include_links=FALSE) {
  $nodes = mogov_news_get_recent_news_items($count, $include_links);
  $data = mogov_news_class_nodes($nodes);
  $link_options = array(
    'html' => TRUE,
    'attributes' => array(
      'class' => array(
        'read-more-link',
      ),
    ),
  );
  $contents = array(
    0 => array(
      '#markup' => mogov_news_make_list($data),
    ),
    1 => array(
      '#markup' => l('See more news', variable_get_value('mogov_news_archive_path'), $link_options),
    ),
  );
  return render($contents);
}

function mogov_news_get_related_news_content($count) {
  // On news items, current interest trumps matching score, so we just check
  // for at least one matching tag and then sort by date.
  module_load_include('inc', 'mogov_helpers', 'includes/get_nodes');
  $contents = NULL;
  $node = mogov_helpers_get_current_node();
  if (!$node) {
    return FALSE;
  }
  $field = field_get_items('node', $node, 'field_mogov_tags');
  $tids = array();
  if (!empty($field[0]['tid'])) {
    foreach ($field as $field_item) {
      $tids[] = $field_item['tid'];
    }
  }
  if (!$tids) {
    return FALSE;
  }
  $nodes = mogov_news_get_recent_news_items($count, TRUE, $tids);
  if (in_array($node->nid, array_keys($nodes))) {
    unset($nodes[$node->nid]);
  }
  $data = mogov_news_class_nodes($nodes);
  $contents = mogov_news_make_list($data);
  return $contents;
}

function mogov_news_get_recent_news_items($count, $include_links=FALSE, $tags=array()) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node');
  $bundles = array('mogov_news_release');
  if ($include_links) {
    $bundles[] = 'mogov_news_release_link';
  }
  $query->entityCondition('bundle', $bundles);
  $query->propertyCondition('status', 1);
  if ($tags) {
    $query->fieldCondition('field_mogov_tags', 'tid', $tags);
  }
  $query->fieldOrderBy('field_mogov_news_date', 'value', 'DESC');
  $query->range(0, $count);
  $result = $query->execute();
  if (empty($result['node'])) {
    return FALSE;
  }
  $nodes = entity_load('node', array_keys($result['node']));
  return $nodes;
}

function mogov_news_class_nodes($nodes) {
  $data = array();
  foreach ($nodes as $nid=>$node) {
    $result = new stdClass();
    $short_title_field = field_get_items('node', $node, 'field_mogov_news_short_headline');
    if (!empty($short_title_field[0]['value'])) {
      $result->title = t($short_title_field[0]['value']);
    } else {
      $result->title = $node->title;
    }
    if ($node->type == 'mogov_news_release_link') {
      $field = field_get_items('node', $node, 'field_mogov_news_remote_url');
      if (!empty($field[0]['url'])) {
        $result->url = $field[0]['url'];
        $result->external = TRUE;
      } else {
        continue;
      }
    } else {
      $result->url = 'node/' . $nid;
      $result->external = FALSE;
    }
    $result->media_class = FALSE;
    $media_field = field_get_items('node', $node, 'field_mogov_news_media');
    if (!empty($media_field[0]['type'])) {
      foreach ($media_field as $media_field_item) {
        if ($media_field_item['type'] == 'image' and !in_array($result->media_class, array('with-video', 'with-audio'))) {
          $result->media_class = 'with-image';
        } elseif ($media_field_item['type'] == 'audio' and $result->media_class != 'with-video') {
          $result->media_class = 'with-audio';
        } elseif ($media_field_item['type'] == 'video') {
          $result->media_class = 'with-video';
          break;
        }
      }
    }
    $data[] = $result;
  }
  return $data;
}

function mogov_news_make_list($items) {
  $list = array(
    'type' => 'ul',
    'title' => NULL,
    'attributes' => array(
      'class' => array(
        'menu',
        'mogov-news-items',
      ),
    ),
    'items' => array(),
  );
  foreach ($items as $key=>$item) {
    $options = array(
      'external' => $item->external,
    );
    if ($item->external) {
      $options['attributes'] = array(
        'target' => '_blank',
      );
    }
    $list['items'][$key] = array(
      'data' => l($item->title, $item->url, $options),
    );
    if ($item->media_class) {
      $list['items'][$key]['class'] = array(
        $item->media_class,
      );
    }
  }
  return theme_item_list($list);
}

function mogov_news_get_authorized_sources() {
  global $user;
  if (array_intersect(array('administrator', 'webmaster'), $user->roles)) {
    return 'all';
  }
  $user_detailed = user_load($user->uid);
  $sources_field = field_get_items('user', $user_detailed, 'field_authorized_sources');
  if (empty($sources_field)) {
    return 'none';
  }
  $approved = array();
  foreach ($sources_field as $source) {
    $approved[] = $source['target_id'];
  }
  return $approved;
}
